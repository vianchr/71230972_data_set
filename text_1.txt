Fungsi ini open()memiliki banyak parameter. Mari kita lihat params yang diperlukan untuk membaca file teks. Ini membuka file dalam mode tertentu dan mengembalikan objek file.

Parameter


file – Objek seperti jalur yang mewakili jalur file

mode (Opsional) – Ini mode adalah parameter opsional. Ini adalah string yang menentukan mode di mana Anda ingin membuka file.


Mode

Keterangan
Unstructured data sendiri merupakan jenis data yang tidak mengikuti format tertentu, dan biasanya sulit untuk dibaca dengan software yang tradisional. Bentuk data ini pun bisa bermacam-macam, mulai dari text, audio, video, gambar, dan lain sebagainya.

Semi-structured data ini merupakan jenis data yang memiliki masing-masing karakteristik dari structured data maupun unstructured data. Walaupun terkadang bentuknya tidak mengikuti kaidah format yang telah ditentukan seperti pada structured data. Namun bentuk ini masih mudah untuk dibaca manusia maupun mesin. 

Salah satu ciri semi-structured data adalah memiliki sebuah tag untuk menentukan elemen dan atribut dari tiap datanya, yang biasa kita definisikan sebagai sebuah key dan value dari data tersebut. Salah satu contoh jenis semi-structured data ini adalah XML, JSON, dan HTML files. 

Pada bagian ini, kita akan membahas dua contoh files, satu dari structured data dan satu dari semi-structured data. Keduanya cukup sering digunakan untuk menyimpan informasi oleh programmer, dan juga bagaimana contoh cara untuk membaca masing-masing file-nya.

Contoh Data Terstruktur: Flat Files
Dikutip dari computerhope.com, flat files adalah istilah umum yang biasa digunakan oleh seorang programmer untuk menyatakan sebuah database yang berbentuk file, yang tidak terikat dengan link ataupun non-relational database lainnya. 

Sebuah flat file biasanya memiliki pembatas yang biasa disebut dengan delimiter, yaitu sebuah simbol (bisa berupa “|” maupun “,”) yang membatasi data antar kolom. Jenis flat files yang umum dikenal antara lain adalah CSV (Comma-Separated Value) yang dibatasi menggunakan tanda koma “,” ataupun text files (.txt files). 

Berikut adalah contoh text files yang diambil dari situs kaggle.com: 


Pada contoh di atas merupakan contoh sebuah flat files yang berupa CSV, di mana tiap data antar kolom dibatasi dengan tanda koma “,”. Sebuah CSV biasa dapat dibuka dengan menggunakan Microsoft Excel, namun tidak menutup kemungkinan juga untuk dibuka dengan menggunakan pemrograman Python. 

Ciri lain dari sebuah flat files adalah bentuk datanya yang memiliki baris dan kolom. Baris pertama biasanya merupakan label atau disebut header, atau disebut juga nama kolom yang mewakili isi data dari baris kedua sampai akhir. 

Apabila kita membaca jenis data ini, akan sangat sulit apabila kita memiliki jumlah baris yang banyak, karena panjang karakter yang berbeda-beda, dan kita perlu mencari data tersebut berada di kolom yang mana. 

Oleh karena itu, Python memiliki fitur untuk
'r'

Buka file untuk mode membaca (default jika mode tidak ditentukan)

'w'

Buka file untuk ditulis. Python akan membuat file baru jika tidak ada atau memotong konten file jika file tersebut ada

'x'

Buka file untuk pembuatan eksklusif.

'a'

Buka file untuk menambahkan teks. Membuat file baru jika file tersebut tidak ada.

't'

Buka file dalam mode teks. (bawaan)

'b'

Buka file dalam mode biner.

'+'

Buka file untuk diperbarui (membaca dan menulis)


Contoh

file = open('C:\hello.txt','r')

Metode untuk Membaca Isi File

Ada tiga cara untuk membaca data dari file teks.


read(): read()Fungsi mengembalikan byte yang dibaca dalam bentuk string. Metode ini berguna ketika Anda memiliki file kecil, dan Anda ingin membaca byte tertentu atau seluruh file dan menyimpannya ke dalam variabel string.


readline(): readline() Fungsi ** ** mengembalikan satu baris dari file teks dan kembali dalam bentuk string.


readlines(): readlines() Fungsi ** ** membaca semua baris dari file teks dan mengembalikan setiap baris sebagai elemen string dalam daftar.


close()fungsi piton

File akan tetap terbuka sampai Anda menutup file menggunakan close()fungsi tersebut. Ini adalah suatu keharusan dan praktik terbaik untuk melakukan operasi ini setelah membaca data dari file karena ini akan mengosongkan ruang memori yang diperoleh oleh file tersebut. Jika tidak, hal ini dapat menyebabkan pengecualian yang tidak tertangani.

Contoh Membaca File Teks dengan Python

Contoh 1 – Membaca Seluruh File Teks Menggunakan read()Fungsi

Dalam contoh di bawah ini, kita membaca seluruh file teks menggunakan read()metode ini. File dapat dibuka dalam mode baca atau dalam mode teks untuk mem